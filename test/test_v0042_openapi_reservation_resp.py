# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.11.0&openapi/slurmctld&openapi/slurmdbd
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from slurm_client.models.v0042_openapi_reservation_resp import V0042OpenapiReservationResp

class TestV0042OpenapiReservationResp(unittest.TestCase):
    """V0042OpenapiReservationResp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0042OpenapiReservationResp:
        """Test V0042OpenapiReservationResp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0042OpenapiReservationResp`
        """
        model = V0042OpenapiReservationResp()
        if include_optional:
            return V0042OpenapiReservationResp(
                reservations = [
                    slurm_client.models.v0/0/42_reservation_info.v0.0.42_reservation_info(
                        accounts = '', 
                        burst_buffer = '', 
                        core_count = 56, 
                        core_specializations = [
                            slurm_client.models.v0/0/42_reservation_core_spec.v0.0.42_reservation_core_spec(
                                node = '', 
                                core = '', )
                            ], 
                        end_time = slurm_client.models.v0/0/42_uint64_no_val_struct.v0.0.42_uint64_no_val_struct(
                            set = True, 
                            infinite = True, 
                            number = 56, ), 
                        features = '', 
                        flags = [
                            'MAINT'
                            ], 
                        groups = '', 
                        licenses = '', 
                        max_start_delay = 56, 
                        name = '', 
                        node_count = 56, 
                        node_list = '', 
                        partition = '', 
                        purge_completed = slurm_client.models.v0_0_42_reservation_info_purge_completed.v0_0_42_reservation_info_purge_completed(
                            time = slurm_client.models.v0/0/42_uint32_no_val_struct.v0.0.42_uint32_no_val_struct(
                                set = True, 
                                infinite = True, 
                                number = 56, ), ), 
                        start_time = slurm_client.models.v0/0/42_uint64_no_val_struct.v0.0.42_uint64_no_val_struct(
                            set = True, 
                            infinite = True, 
                            number = 56, ), 
                        watts = slurm_client.models.v0/0/42_uint32_no_val_struct.v0.0.42_uint32_no_val_struct(
                            set = True, 
                            infinite = True, 
                            number = 56, ), 
                        tres = '', 
                        users = '', )
                    ],
                last_update = slurm_client.models.v0/0/42_uint64_no_val_struct.v0.0.42_uint64_no_val_struct(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                meta = slurm_client.models.v0/0/42_openapi_meta.v0.0.42_openapi_meta(
                    plugin = slurm_client.models.v0_0_42_openapi_meta_plugin.v0_0_42_openapi_meta_plugin(
                        type = '', 
                        name = '', 
                        data_parser = '', 
                        accounting_storage = '', ), 
                    client = slurm_client.models.v0_0_42_openapi_meta_client.v0_0_42_openapi_meta_client(
                        source = '', 
                        user = '', 
                        group = '', ), 
                    command = [
                        ''
                        ], 
                    slurm = slurm_client.models.v0_0_42_openapi_meta_slurm.v0_0_42_openapi_meta_slurm(
                        version = slurm_client.models.v0_0_42_openapi_meta_slurm_version.v0_0_42_openapi_meta_slurm_version(
                            major = '', 
                            micro = '', 
                            minor = '', ), 
                        release = '', 
                        cluster = '', ), ),
                errors = [
                    slurm_client.models.v0/0/42_openapi_error.v0.0.42_openapi_error(
                        description = '', 
                        error_number = 56, 
                        error = '', 
                        source = '', )
                    ],
                warnings = [
                    slurm_client.models.v0/0/42_openapi_warning.v0.0.42_openapi_warning(
                        description = '', 
                        source = '', )
                    ]
            )
        else:
            return V0042OpenapiReservationResp(
                reservations = [
                    slurm_client.models.v0/0/42_reservation_info.v0.0.42_reservation_info(
                        accounts = '', 
                        burst_buffer = '', 
                        core_count = 56, 
                        core_specializations = [
                            slurm_client.models.v0/0/42_reservation_core_spec.v0.0.42_reservation_core_spec(
                                node = '', 
                                core = '', )
                            ], 
                        end_time = slurm_client.models.v0/0/42_uint64_no_val_struct.v0.0.42_uint64_no_val_struct(
                            set = True, 
                            infinite = True, 
                            number = 56, ), 
                        features = '', 
                        flags = [
                            'MAINT'
                            ], 
                        groups = '', 
                        licenses = '', 
                        max_start_delay = 56, 
                        name = '', 
                        node_count = 56, 
                        node_list = '', 
                        partition = '', 
                        purge_completed = slurm_client.models.v0_0_42_reservation_info_purge_completed.v0_0_42_reservation_info_purge_completed(
                            time = slurm_client.models.v0/0/42_uint32_no_val_struct.v0.0.42_uint32_no_val_struct(
                                set = True, 
                                infinite = True, 
                                number = 56, ), ), 
                        start_time = slurm_client.models.v0/0/42_uint64_no_val_struct.v0.0.42_uint64_no_val_struct(
                            set = True, 
                            infinite = True, 
                            number = 56, ), 
                        watts = slurm_client.models.v0/0/42_uint32_no_val_struct.v0.0.42_uint32_no_val_struct(
                            set = True, 
                            infinite = True, 
                            number = 56, ), 
                        tres = '', 
                        users = '', )
                    ],
                last_update = slurm_client.models.v0/0/42_uint64_no_val_struct.v0.0.42_uint64_no_val_struct(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
        )
        """

    def testV0042OpenapiReservationResp(self):
        """Test V0042OpenapiReservationResp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
