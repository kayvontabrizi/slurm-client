# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.05.3&openapi/v0.0.39&openapi/dbv0.0.39&openapi/slurmdbd&openapi/slurmctld
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v0039_job import V0039Job

class TestV0039Job(unittest.TestCase):
    """V0039Job unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0039Job:
        """Test V0039Job
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0039Job`
        """
        model = V0039Job()
        if include_optional:
            return V0039Job(
                account = '',
                comment = openapi_client.models.v0_0_39_job_comment.v0_0_39_job_comment(
                    administrator = '', 
                    job = '', 
                    system = '', ),
                allocation_nodes = 56,
                array = openapi_client.models.v0_0_39_job_array.v0_0_39_job_array(
                    job_id = 56, 
                    limits = openapi_client.models.v0_0_39_job_array_limits.v0_0_39_job_array_limits(
                        max = openapi_client.models.v0_0_39_job_array_limits_max.v0_0_39_job_array_limits_max(
                            running = openapi_client.models.v0_0_39_job_array_limits_max_running.v0_0_39_job_array_limits_max_running(
                                tasks = 56, ), ), ), 
                    task_id = openapi_client.models.v0/0/39_uint32_no_val.v0.0.39_uint32_no_val(
                        set = True, 
                        infinite = True, 
                        number = 56, ), 
                    task = '', ),
                association = openapi_client.models.v0/0/39_assoc_short.v0.0.39_assoc_short(
                    account = '', 
                    cluster = '', 
                    partition = '', 
                    user = '', ),
                block = '',
                cluster = '',
                constraints = '',
                container = '',
                derived_exit_code = openapi_client.models.v0/0/39_job_exit_code.v0.0.39_job_exit_code(
                    status = '', 
                    return_code = 56, 
                    signal = openapi_client.models.v0_0_39_job_exit_code_signal.v0_0_39_job_exit_code_signal(
                        signal_id = 56, 
                        name = '', ), ),
                time = openapi_client.models.v0_0_39_job_time.v0_0_39_job_time(
                    elapsed = 56, 
                    eligible = 56, 
                    end = 56, 
                    start = 56, 
                    submission = 56, 
                    suspended = 56, 
                    system = openapi_client.models.v0_0_39_job_time_system.v0_0_39_job_time_system(
                        seconds = 56, 
                        microseconds = 56, ), 
                    limit = openapi_client.models.v0/0/39_uint32_no_val.v0.0.39_uint32_no_val(
                        set = True, 
                        infinite = True, 
                        number = 56, ), 
                    total = openapi_client.models.v0_0_39_job_time_system.v0_0_39_job_time_system(
                        seconds = 56, 
                        microseconds = 56, ), 
                    user = , ),
                exit_code = openapi_client.models.v0/0/39_job_exit_code.v0.0.39_job_exit_code(
                    status = '', 
                    return_code = 56, 
                    signal = openapi_client.models.v0_0_39_job_exit_code_signal.v0_0_39_job_exit_code_signal(
                        signal_id = 56, 
                        name = '', ), ),
                extra = '',
                failed_node = '',
                flags = [
                    'NONE'
                    ],
                group = '',
                het = openapi_client.models.v0_0_39_job_het.v0_0_39_job_het(
                    job_id = 56, 
                    job_offset = openapi_client.models.v0/0/39_uint32_no_val.v0.0.39_uint32_no_val(
                        set = True, 
                        infinite = True, 
                        number = 56, ), ),
                job_id = 56,
                name = '',
                licenses = '',
                mcs = openapi_client.models.v0_0_39_job_mcs.v0_0_39_job_mcs(
                    label = '', ),
                nodes = '',
                partition = '',
                hold = True,
                priority = openapi_client.models.v0/0/39_uint32_no_val.v0.0.39_uint32_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                qos = '',
                required = openapi_client.models.v0_0_39_job_required.v0_0_39_job_required(
                    cpus = 56, 
                    memory_per_cpu = openapi_client.models.v0/0/39_uint64_no_val.v0.0.39_uint64_no_val(
                        set = True, 
                        infinite = True, 
                        number = 56, ), 
                    memory_per_node = openapi_client.models.v0/0/39_uint64_no_val.v0.0.39_uint64_no_val(
                        set = True, 
                        infinite = True, 
                        number = 56, ), 
                    memory = 56, ),
                kill_request_user = '',
                reservation = openapi_client.models.v0_0_39_job_reservation.v0_0_39_job_reservation(
                    id = 56, 
                    name = '', ),
                script = '',
                state = openapi_client.models.v0_0_39_job_state.v0_0_39_job_state(
                    current = '', 
                    reason = '', ),
                steps = [
                    openapi_client.models.v0/0/39_step.v0.0.39_step(
                        time = openapi_client.models.v0_0_39_step_time.v0_0_39_step_time(
                            elapsed = 56, 
                            end = 56, 
                            start = 56, 
                            suspended = 56, 
                            system = openapi_client.models.v0_0_39_step_time_system.v0_0_39_step_time_system(
                                seconds = 56, 
                                microseconds = 56, ), 
                            total = openapi_client.models.v0_0_39_step_time_system.v0_0_39_step_time_system(
                                seconds = 56, 
                                microseconds = 56, ), 
                            user = , ), 
                        exit_code = openapi_client.models.v0/0/39_job_exit_code.v0.0.39_job_exit_code(
                            status = '', 
                            return_code = 56, 
                            signal = openapi_client.models.v0_0_39_job_exit_code_signal.v0_0_39_job_exit_code_signal(
                                signal_id = 56, 
                                name = '', ), ), 
                        nodes = openapi_client.models.v0_0_39_step_nodes.v0_0_39_step_nodes(
                            count = 56, 
                            range = '', 
                            list = [
                                ''
                                ], ), 
                        tasks = openapi_client.models.v0_0_39_step_tasks.v0_0_39_step_tasks(
                            count = 56, ), 
                        pid = '', 
                        cpu = openapi_client.models.v0_0_39_step_cpu.v0_0_39_step_CPU(
                            requested_frequency = openapi_client.models.v0_0_39_step_cpu_requested_frequency.v0_0_39_step_CPU_requested_frequency(
                                min = openapi_client.models.v0/0/39_uint32_no_val.v0.0.39_uint32_no_val(
                                    set = True, 
                                    infinite = True, 
                                    number = 56, ), 
                                max = openapi_client.models.v0/0/39_uint32_no_val.v0.0.39_uint32_no_val(
                                    set = True, 
                                    infinite = True, 
                                    number = 56, ), ), 
                            governor = '', ), 
                        kill_request_user = '', 
                        state = '', 
                        statistics = openapi_client.models.v0_0_39_step_statistics.v0_0_39_step_statistics(
                            energy = openapi_client.models.v0_0_39_step_statistics_energy.v0_0_39_step_statistics_energy(
                                consumed = openapi_client.models.v0/0/39_uint64_no_val.v0.0.39_uint64_no_val(
                                    set = True, 
                                    infinite = True, 
                                    number = 56, ), ), ), 
                        step = openapi_client.models.v0_0_39_step_step.v0_0_39_step_step(
                            id = openapi_client.models.v0/0/39_slurm_step_id.v0.0.39_slurm_step_id(
                                job_id = 56, 
                                step_het_component = 56, 
                                step_id = '', ), 
                            name = '', ), 
                        task = openapi_client.models.v0_0_39_step_task.v0_0_39_step_task(
                            distribution = '', ), 
                        tres = openapi_client.models.v0_0_39_step_tres.v0_0_39_step_tres(
                            requested = openapi_client.models.v0_0_39_step_tres_requested.v0_0_39_step_tres_requested(
                                average = [
                                    openapi_client.models.v0/0/39_tres.v0.0.39_tres(
                                        type = '', 
                                        name = '', 
                                        count = 56, )
                                    ], ), 
                            allocated = [
                                openapi_client.models.v0/0/39_tres.v0.0.39_tres(
                                    type = '', 
                                    name = '', 
                                    count = 56, )
                                ], ), )
                    ],
                submit_line = '',
                tres = openapi_client.models.v0_0_39_job_tres.v0_0_39_job_tres(
                    allocated = [
                        openapi_client.models.v0/0/39_tres.v0.0.39_tres(
                            type = '', 
                            name = '', 
                            id = 56, 
                            count = 56, )
                        ], 
                    requested = [
                        openapi_client.models.v0/0/39_tres.v0.0.39_tres(
                            type = '', 
                            name = '', 
                            id = 56, 
                            count = 56, )
                        ], ),
                used_gres = '',
                user = '',
                wckey = openapi_client.models.v0/0/39_wckey_tag.v0.0.39_wckey_tag(
                    flags = [
                        'ASSIGNED_DEFAULT'
                        ], ),
                working_directory = ''
            )
        else:
            return V0039Job(
        )
        """

    def testV0039Job(self):
        """Test V0039Job"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
